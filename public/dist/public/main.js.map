{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/review/review.component.css","webpack:///./src/app/review/review.component.html","webpack:///./src/app/review/review.component.ts","webpack:///./src/app/reviews/reviews.component.css","webpack:///./src/app/reviews/reviews.component.html","webpack:///./src/app/reviews/reviews.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { NewComponent } from './new/new.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { ReviewComponent } from './review/review.component';\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/restaurants' },\n  { path: 'restaurants', component: DashboardComponent},\n  { path: 'restaurants/new', component: NewComponent},\n  { path: 'restaurants/reviews/:id', component: ReviewsComponent},\n  { path: 'restaurants/:id/review', component: ReviewComponent},\n  { path: 'restaurants/:id', component: EditComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container jumbotron\\\">\\n  <div style=\\\"text-align:left\\\">\\n    <h1>\\n      Let's Eat!\\n    </h1>\\n    <router-outlet></router-outlet>\\n    \\n  </div>\\n</div>\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  newRestaurant: any;\n  editRestaurant: any;\n  restaurants;\n  restaurant;\n  id: String;\n\n  constructor(private _httpService: HttpService) {}\n  ngOnInit() {\n    this.newRestaurant = { name: \"\", cuisine: \"\"}\n    this.editRestaurant = { _id: \"\", name: \"\", cuisine: \"\"}\n    this.getRestaurantsFromService();\n    // this.getTaskFromService();\n  }\n  getRestaurantsFromService() {\n    let observable = this._httpService.getRestaurants()\n    observable.subscribe(data =>  {\n      console.log(\"Got our restaurants!\", data)\n      this.restaurants = data;\n      console.log(this.restaurants)\n\n    });\n  }\n  getRestaurantFromService(id) {\n    let observable = this._httpService.getRestaurant(id)\n    observable.subscribe(data => {\n      console.log(\"Got the restaurant!\", data)\n      this.restaurant = data;\n    });\n  }\n  \n  \n  \n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { ReviewComponent } from './review/review.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewComponent,\n    EditComponent,\n    ReviewsComponent,\n    ReviewComponent,\n    DashboardComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a routerLink='/restaurants/new' routerLinkActive='active' class='btn btn-primary'>New restaurant</a>\\n<table class='table table-striped'>\\n  <thead class='thead-dark'>\\n    <tr>\\n      <th scope='col'>Restaurant</th>\\n      <th scope='col'>Cuisine</th>\\n      <th scopr='col'>Avg. Stars</th>\\n      <th scope='col'>Actions available</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let restaurant of restaurants\\\">\\n    <td>{{ restaurant.name }}</td>\\n    <td>{{ restaurant.cuisine }}</td>\\n    <td *ngIf='restaurant.average'>{{ restaurant.average }} stars</td>\\n    <td *ngIf='!restaurant.average'>No reviews!</td>\\n    <td>\\n      <a class='btn btn-primary btn-sm' [routerLink]=\\\"['/restaurants/reviews', restaurant._id]\\\">Read Reviews</a>\\n      <button style='margin-left: 15px;' class='btn btn-success btn-sm' (click)=\\\"showEdit(restaurant._id)\\\">Update</button>\\n      <!-- <button style='margin-left: 15px;' class='btn btn-success btn-sm' [routerLink]=\\\"['/restaurants/', restaurant._id]\\\">Update</button> -->\\n      <button style='margin-left: 15px;' class='btn btn-warning btn-sm' (click)=\\\"deleteRestaurantFromService(restaurant._id)\\\">Delete</button>\\n    </td>\\n  </tbody>\\n</table>\\n<div>\\n  <app-edit *ngIf=\\\"parentId\\\" [childId]=\\\"parentId\\\" (closeForm)=\\\"dataFromChild($event)\\\"></app-edit>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  restaurants;\n  restaurant;\n  parentId: string;\n  reviews: Array<object>;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    console.log(this.parentId);\n    this.getRestaurantsFromService()\n  }\n  getRestaurantsFromService() {\n    let observable = this._httpService.getRestaurants()\n    observable.subscribe(data => {\n      console.log(\"Got our restaurants!\", data)\n\n      for (var idx in data) {\n        let currRestaurant = data[idx];\n        var sum = 0;\n        for (var rev of currRestaurant['reviews']) {\n          sum += rev['stars'];\n        }\n        console.log(sum)\n        if (sum === 0) {\n          var avg = sum\n          data[idx]['average'] = avg;\n        } else {\n          avg = sum / currRestaurant['reviews'].length\n          data[idx]['average'] = avg;\n        }\n        \n      }\n\n      this.restaurants = data;\n      console.log(this.restaurants)\n    });\n  }\n  deleteRestaurantFromService(id) {\n    console.log('Click will delete', id)\n    let observable = this._httpService.deleteRestaurant(id);\n    observable.subscribe(data => {\n      this.getRestaurantsFromService();\n    })\n  }\n  showEdit(idFromButton) {\n    this.parentId = idFromButton;\n    console.log(this.parentId);\n  }\n  dataFromChild(eventData) {\n    this.parentId = eventData;\n    this.getRestaurantsFromService();\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container jumbotron\\\" style=\\\"text-align:left\\\">\\n  <h5>Edit a restaurant</h5>\\n  <form *ngIf='editRestaurant._id' (submit)=\\\"onSubmitEditRestaurant()\\\">\\n    <div class='form-group row'>\\n      Restaurant Name: <input style='margin-left: 10px;' class='form-control mx-sm-3' type='text' name='editRestaurant.name'\\n        [(ngModel)]='editRestaurant.name' />\\n    </div>\\n    <div class='form-group row'>\\n      Cuisine: <input style='margin-left: 10px;' class='form-control mx-sm-3' type='text' name='editRestaurant.cuisine'\\n        [(ngModel)]='editRestaurant.cuisine' />\\n    </div>\\n\\n    <div class='form-group row'>\\n      <input class='btn btn-primary' type='submit' value='Update' />\\n      <a (click)=\\\"tellParentToCloseForm()\\\" routerLinkActive='active' class='btn btn-warning'>Cancel</a>\\n    </div>\\n    <div *ngIf=\\\"errors.errors.name\\\">\\n        {{ errors.errors.name.message }}\\n    </div>\\n    <div *ngIf=\\\"errors.errors.cuisine\\\">\\n        {{ errors.errors.cuisine.message }}\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router, ChildActivationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  editRestaurant: any;\n  restaurants;\n  restaurant;\n  id: String;\n  errors: Object;\n  @Output() closeForm = new EventEmitter();\n\n  @Input() childId: String;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.editRestaurant = { _id: \"\", name: \"\", cuisine: \"\"}\n    this.getRestaurantFromServiceById();\n\n    this.errors = {}\n    this.errors['errors'] = {}\n    console.log(this.childId);\n  }\n  getRestaurantFromServiceById() {\n      let observable = this._httpService.getRestaurant(this.childId)\n      observable.subscribe(data =>  {\n        console.log(\"Got our restaurant!\", data)\n        this.editRestaurant = data;\n        console.log(this.editRestaurant)\n\n      });\n  }\n  // onEditRestaurant(id, name, cuisine) {\n  //   this.editRestaurant._id = id;\n  //   this.editRestaurant.name = name;\n  //   this.editRestaurant.cuisine = cuisine;\n  // }\n  onSubmitEditRestaurant() {\n    console.log(\"this will edit a restaurant\")\n    let observable = this._httpService.editRestaurant(this.editRestaurant._id, this.editRestaurant);\n    observable.subscribe (data => {\n      console.log(data)\n      if (data['errors']) {\n        console.log(data['errors'])\n        this.errors = data['errors']\n      } else {\n        this._router.navigate(['/restaurants'])\n        this.closeForm.emit(null);\n      }\n    })\n  }\n  tellParentToCloseForm() {\n    this.closeForm.emit(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) { \n  \n  }\n  getRestaurants(){\n    // let tempObservable = this._http.get('/tasks');\n    // tempObservable.subscribe(data=> console.log('Got our tasks!', data))\n    return this._http.get('api/restaurants');\n  }\n  getRestaurant(id){\n    // let tempObservable = this._http.get('/tasks/5be61addf7319843838a0560')\n    // tempObservable.subscribe(data=> console.log('Got one task!!!', data))\n    return this._http.get('api/restaurants/' + id)\n  }\n  addRestaurant(newrestaurant) {\n    return this._http.post('api/restaurants', newrestaurant)\n  }\n  editRestaurant(id, editrestaurant) {\n    return this._http.put('api/restaurants/' + id, editrestaurant)\n  }\n  deleteRestaurant(id) {\n    return this._http.delete('api/restaurants/' + id)\n  }\n  addReview(id, newreview) {\n    return this._http.post('api/reviews/new/' + id, newreview)\n  }\n}\n\n\n ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy9uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n    <h5>Register a restaurant</h5>\\n</div>\\n<form (submit)=\\\"onSubmitAddRestaurant()\\\">\\n\\n    <div class='form-group row'>\\n        Restaurant name: <input style='margin-left: 10px;' type='text' name='newRestaurant.name' [(ngModel)]='newRestaurant.name' />\\n    </div>\\n    <div class='form-group row'>\\n        Cuisine: <input style='margin-left: 10px;' type='text' name='newRestaurant.cuisine' [(ngModel)]='newRestaurant.cuisine' />\\n    </div>\\n    <div class='form-group row'>\\n        <input class='btn btn-primary' type='submit' value='Register' />\\n        <a routerLink='/restaurants' routerLinkActive='active' class='btn btn-secondary'>Cancel</a>\\n    </div>\\n    <div *ngIf=\\\"errors.errors.name\\\">\\n        {{ errors.errors.name.message }}\\n    </div>\\n    <div *ngIf=\\\"errors.errors.cuisine\\\">\\n        {{ errors.errors.cuisine.message }}\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newRestaurant: any;\n  id: String;\n  errors: object;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.newRestaurant = { name: \"\", cuisine: \"\"}\n    // this.errors = {\n    //   errors: {\n    //     name: {}\n    //   }\n    // }\n    this.errors = {}\n    this.errors['errors'] = {}\n    // this.errors['errors']['name'] = {}\n  }\n  onSubmitAddRestaurant() {\n    let observable = this._httpService.addRestaurant(this.newRestaurant);\n    observable.subscribe (data => {\n      console.log('New restaurant created', data);\n      if (data['errors']) {\n        console.log(data['errors'])\n        if (data['errors']['code'] == 11000) {\n          this.errors = {\n            errors: {\n              name: {\n                message: \"Restaurant already exists\"\n              }\n            }\n          }\n        } else {\n          this.errors = data['errors']\n        }\n      } else {\n        this._router.navigate(['/restaurants'])\n      }\n    })\n    this.newRestaurant = { name: \"\", cuisine: \"\"}\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jldmlldy9yZXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<div>\\n    <h5>Write a review for  {{ restaurant.name }} </h5>\\n</div>\\n<form (submit)=\\\"onSubmitAddReview()\\\">\\n\\n    <div class='form-group row'>\\n        Your name: <input style='margin-left: 10px;' type='text' name='newReview.customer' [(ngModel)]='newReview.customer' />\\n    </div>\\n    <div class='form-group row'>\\n        Stars:\\n        <select style='margin-left: 10px;' name='newReview.stars' [(ngModel)]='newReview.stars'>\\n            <option value=\\\"1\\\">1 star</option>\\n            <option value=\\\"2\\\">2 stars</option>\\n            <option value=\\\"3\\\">3 stars</option>\\n            <option value=\\\"4\\\">4 stars</option>\\n            <option value=\\\"5\\\">5 stars</option>\\n        </select>\\n\\n        <!-- Stars: <input style='margin-left: 10px;' type='text' name='newReview.stars' [(ngModel)]='newReview.stars' /> -->\\n    </div>\\n    <div class='form-group row'>\\n        Your review: <input style='margin-left: 10px;' type='text' name='newReview.review' [(ngModel)]='newReview.review'>\\n    </div>\\n\\n    <div class='form-group row'>\\n        <input class='btn btn-primary' type='submit' value='Review' />\\n        <a routerLink='/restaurants' routerLinkActive='active' class='btn btn-secondary'>Cancel</a>\\n    </div>\\n    <div *ngIf=\\\"errors.errors.customer\\\">\\n        {{ errors.errors.customer.message }}\\n    </div>\\n    <div *ngIf='errors.errors.stars'>\\n        {{ errors.errors.stars.message }}\\n    </div>\\n    <div *ngIf=\\\"errors.errors.review\\\">\\n        {{ errors.errors.review.message }}\\n    </div>\\n    \\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n  restaurant: object;\n  newReview: object;\n  errors: Object;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.newReview = {};\n    this.restaurant = {};\n    this.getRestaurantFromServiceById();\n    this.errors = {\n      errors: {\n        customer: '',\n        stars: '',\n        review: ''\n      }\n    }\n  }\n\n  getRestaurantFromServiceById() {\n    this._route.params.subscribe((params: Params) => {\n      let observable = this._httpService.getRestaurant(params['id'])\n      observable.subscribe(data =>  {\n        console.log(\"Got our restaurant!\", data)\n        this.restaurant = data;\n      });\n    });\n  }\n  onSubmitAddReview() {\n    console.log(this.restaurant['_id']);\n    console.log(this.newReview);\n    let observable = this._httpService.addReview(this.restaurant['_id'], this.newReview);\n    observable.subscribe (data => {\n      console.log('New review created', data);\n      if (data['errors']) {\n        console.log(data['errors'])\n        this.errors = data['errors']\n      } else {\n        this._router.navigate(['/restaurants/reviews/'+this.restaurant['_id']])\n      }\n    })\n    // this.newReview = { customer: \"\", stars: \"\", review: \"\"}\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jldmlld3MvcmV2aWV3cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h5>Reviews for {{ restaurant.name }}</h5>\\n<a [routerLink]=\\\"['/restaurants', restaurant._id ,'review']\\\" routerLinkActive='active' class='btn btn-primary'>New review</a>\\n<a routerLink='/restaurants' routerLinkActive='active' class='btn btn-warning'>Go back!</a>\\n<table class='table table-striped'>\\n  <thead class='thead-dark'>\\n    <tr>\\n      <th scope='col'>Customer</th>\\n      <th scope='col'>Stars</th>\\n      <th scope='col'>Description</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let review of reviews\\\">\\n    <td>{{ review.customer }}</td>\\n    <td>{{ review.stars }}</td>\\n    <td>{{ review.review }}</td>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n  restaurant: object;\n  reviews: Array<object>;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.restaurant = {};\n    this.getRestaurantFromServiceById();\n  }\n\n  getRestaurantFromServiceById() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n  \n      let observable = this._httpService.getRestaurant(params['id'])\n      observable.subscribe(data =>  {\n        console.log(\"Got our restaurant!\", data)\n        this.restaurant = data;\n        this.reviews = data['reviews'];\n        this.reviews.sort(this.compare);\n        console.log(this.reviews)\n        var sum = 0;\n        for (var rev of this.reviews) {\n          sum += rev['stars'];\n        }\n        console.log(sum);\n        var avg = sum / this.reviews.length\n        console.log(avg)\n      });\n    });\n  }\n\n  compare(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const genreA = a.stars;\n    const genreB = b.stars;\n  \n    let comparison = 0;\n    if (genreA < genreB) {\n      comparison = 1;\n    } else if (genreA > genreB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}